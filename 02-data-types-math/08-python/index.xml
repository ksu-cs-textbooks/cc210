




	
	
		

	
	
		

	
	
		

	
	
		

	
	
		
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python Data Types Tutorial on CC 210 Textbook</title>
    <link>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-python/</link>
    <description>Recent content in Python Data Types Tutorial on CC 210 Textbook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Operators</title>
      <link>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-python/04-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-python/04-operators/</guid>
      <description>Now that we&amp;rsquo;ve learned how to create our own variables, we can use them to perform a wide variety of mathematical operations. For most of these, we&amp;rsquo;ll use the same operator symbols that we&amp;rsquo;ve used before in math, but a few of them are unique to programming languages like Python.
For each of the examples below, we&amp;rsquo;ll assume that we have already created two int variables, x and y, as follows:</description>
    </item>
    <item>
      <title>Types</title>
      <link>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-python/01-python-types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-python/01-python-types/</guid>
      <description>The Python programming language is a dynamically typed language. This means that a variable in our programs can store any type of data at any time, and we can even use the same variable to store different data types at different times in the same program. When we attempt to access the data stored in our variable, the Python interpreter determines if the data type of the variable can be used for that operation.</description>
    </item>
    <item>
      <title>Numbers</title>
      <link>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-python/02-numbers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-python/02-numbers/</guid>
      <description>Most of the computer programs we&amp;rsquo;ll write must deal with numbers in some way. So, it makes perfect sense to start working with the numerical data types, since we&amp;rsquo;ll use them very often. Let&amp;rsquo;s dive in and see how we can use these numerical data types in Python!
Python has several built-in classes for representing numbers, text and logical values. All Python variables thus refer to full fledged objects.
Integers The first data type we&amp;rsquo;ll learn about in Python is the one for storing whole numbers, called int class.</description>
    </item>
    <item>
      <title>Other Types</title>
      <link>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-python/03-other-types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-python/03-other-types/</guid>
      <description>There are a few other built in data classes in Python. Let&amp;rsquo;s take a quick look at them and see how they can be used in our programs.
Complex Numbers A complex number is used to store both a real and an imaginary part of a number. These are not typically used in most programs, but they are supported in Python. To create a complex number, use the following syntax:</description>
    </item>
    <item>
      <title>Command-Line Arguments</title>
      <link>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-python/05-command-line-arguments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-python/05-command-line-arguments/</guid>
      <description>The Linux command line consists of the command and the arguments.
In our case the command, the word Linux translates into action, is &amp;ldquo;python3&amp;rdquo;. Everything else is packaged up as string-values and sent to the Python3 interpreter.
Python Interpreter and the Command-line Arguments The Python3 interpreter does different things based on what it receives from Linux as arguments. If it receives no arguments it starts the Python3 Read-Evaluate-PrintLine (REPL). This is an interactive session of Python3 which can be exited with the command quit().</description>
    </item>
    <item>
      <title>Subgoals - Evaluating Expressions</title>
      <link>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-python/06-subgoals-evaluating/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-python/06-subgoals-evaluating/</guid>
      <description>One of the unique parts of this course will be the inclusion of subgoals to help us better understand what is going on in our code. Subgoals are designed to help us structure our thinking process in a way that matches what an experienced developer might have.
A great example is learning how to read. Fluent readers can read whole words at a time, while processing and retaining information from several sentences at once.</description>
    </item>
    <item>
      <title>Subgoals - Writing Expressions</title>
      <link>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-python/07-subgoals-writing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-python/07-subgoals-writing/</guid>
      <description>We can also use subgoals to help us write new expressions in our code. These subgoals help us understand each part of the process of building a new expression, and they also help us avoid many common errors.
Writing Expressions Here are the subgoals for writing a new expression:
1. Find Variable in Problem Statement The first step is to determine which part of the problem statement will be represented by a variable.</description>
    </item>
    <item>
      <title>Printing Text &amp; Numbers</title>
      <link>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-python/08-printing-text-numbers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-python/08-printing-text-numbers/</guid>
      <description>Printing Text with Variables Now that we&amp;rsquo;ve learned how to run our program and provide it some input, we must also learn how to provide output that includes our variables as well as text all on the same line. There are a few ways to accomplish this.
First, we can use print(&amp;quot;text&amp;quot;, end=&amp;quot;&amp;quot;) to print text without a newline character at the end, so that the next output will begin on the same line.</description>
    </item>
  </channel>
</rss>