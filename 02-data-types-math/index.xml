




	
	
		

	
	
		

	
	
		

	
	
		

	
	
		
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Types &amp; Math on CC 210 Textbook</title>
    <link>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/</link>
    <description>Recent content in Data Types &amp; Math on CC 210 Textbook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Variables</title>
      <link>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/02-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/02-variables/</guid>
      <description>YouTube Video
Video Materials
First, let&amp;rsquo;s talk about variables. A variable is a placeholder for another value in a computer program. Most students first learn about variables in a mathematics course, such as Algebra. For example, in math, we might see the equation $ x + 5 = 10 $, where $ x $ is a variable, or placeholder, for a value. Using the algebraic rules, we can solve that equation to find that $ x = 5 $.</description>
    </item>
    <item>
      <title>Arithmetic</title>
      <link>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/05-arithmetic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/05-arithmetic/</guid>
      <description>Once we have data stored in our programs, there are a number of ways we can manipulate that data. Let&amp;rsquo;s look at a few of them here.
Basic Operations At its core, a computer is capable of performing all of the basic arithmetic operations, so we can write programs that can add, subtract, multiply and divide numbers. However, there is one big caveat that must be dealt with.
As discussed on the previous page, computer programs can store numbers as both integers and floating point numbers.</description>
    </item>
    <item>
      <title>Java Data Types Tutorial</title>
      <link>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-java/</guid>
      <description>Chapter 2 - Java Data Types Tutorial Data Types in Java</description>
    </item>
    <item>
      <title>Python Data Types Tutorial</title>
      <link>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/08-python/</guid>
      <description>Chapter 2 - Python Data Types Tutorial Data Types in Python</description>
    </item>
    <item>
      <title>The World as Data</title>
      <link>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/01-world-as-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/01-world-as-data/</guid>
      <description>1
Everything in the world can be represented using data. Think about that for a minute. Does it make sense?
Picture a tree. That tree can be described by its width, height, age, number of leaves, and even its color or texture. What about a person? A person has a name, age, height, and many other attributes. Could we simply represent trees, humans, and other entities in our computer programs using their attributes?</description>
    </item>
    <item>
      <title>Basic Data Types</title>
      <link>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/03-basic-data-types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/03-basic-data-types/</guid>
      <description>In a computer, all data, even the instructions, is stored in a binary format. Binary data consist entirely of 1s and 0s, or, in the case of a computer, it could be represented as &amp;ldquo;on&amp;rdquo; and &amp;ldquo;off&amp;rdquo; for current in a circuit, or &amp;ldquo;positive&amp;rdquo; and &amp;ldquo;negative&amp;rdquo; charges stored on a magnetic storage device. It could even be &amp;ldquo;open&amp;rdquo; and &amp;ldquo;closed&amp;rdquo; for physical memory gates. There are many different ways to represent it, but it all boils down to just 1s and 0s.</description>
    </item>
    <item>
      <title>Data Types Under the Hood</title>
      <link>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/04-types-under-the-hood/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/04-types-under-the-hood/</guid>
      <description>A variable in a high level language is just a memory address. It tells the compiler/interpreter where to start looking for the binary string of data.
Decoding the binary All high-level programming languages use a type system to tell the system how to decode the binary data it finds there. All types have a size and a semantic, how many bits to grab and how to interpret each bit. Consider the 2-byte (16-bit) binary sequence 1100 0110 1110 0100, it can be interpreted as many values based on its type.</description>
    </item>
    <item>
      <title>More on Operations</title>
      <link>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/06-more-on-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/06-more-on-operations/</guid>
      <description>Operation Computer Science, thus programming, has its roots in Mathematics and uses a lot math technical jargon. Unfortunately this means you need to be familiar with some of this jargon.
An operation is a fancy math term for &amp;ldquo;do something&amp;rdquo;, but carries with it its own set of vocabulary. An operation is composed of:
an operator (one or more symbols) operands (one or more pieces of data) a semantic meaning (i.</description>
    </item>
    <item>
      <title>User Input in CC 210</title>
      <link>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/07-user-input/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc210/02-data-types-math/07-user-input/</guid>
      <description>Most programs process some type of user input, whether through typed in text, mouse clicks or cut &amp;amp; paste. In this class we are going to allow 3 types of user input:
Through command-line arguments Through a file stream Through the keyboard stream We are going to give the code that accesses the input right away, and will discuss nuances of the input type in more depth as we get to appropriate parts of the course.</description>
    </item>
  </channel>
</rss>